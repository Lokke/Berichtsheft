// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                   String              @id @default(cuid())
  email                String              @unique
  name                 String
  surname              String?
  password             String
  trainingClass        String?
  trainingProfessionId String?
  trainingProfession   TrainingProfession? @relation(fields: [trainingProfessionId], references: [id])
  trainingStartDate    DateTime?
  department           String?             @default("EDV")

  // Arbeitszeit-Konfiguration pro Wochentag
  mondayEnabled    Boolean @default(true)
  mondayHours      Float   @default(8.0)
  tuesdayEnabled   Boolean @default(true)
  tuesdayHours     Float   @default(8.0)
  wednesdayEnabled Boolean @default(true)
  wednesdayHours   Float   @default(8.0)
  thursdayEnabled  Boolean @default(true)
  thursdayHours    Float   @default(8.0)
  fridayEnabled    Boolean @default(true)
  fridayHours      Float   @default(8.0)
  saturdayEnabled  Boolean @default(false)
  saturdayHours    Float   @default(8.0)
  sundayEnabled    Boolean @default(false)
  sundayHours      Float   @default(8.0)

  entries   Entry[]
  vacations VacationPeriod[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model Entry {
  id          String   @id @default(cuid())
  userId      String
  date        DateTime
  activity    String // Deprecated - wird durch activities ersetzt
  isCompleted Boolean  @default(false)
  week        Int
  month       Int
  year        Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user       User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  activities ActivityEntry[] // Neue 1:n Beziehung für mehrere Aktivitäten

  @@unique([userId, date])
}

model ActivityEntry {
  id          String   @id @default(cuid())
  description String
  duration    Float?
  order       Int
  entryId     String
  entry       Entry    @relation(fields: [entryId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TrainingProfession {
  id       String @id @default(cuid())
  name     String @unique
  category String // "Klassische duale Berufsausbildung", "Duales Studium", "Schulische Ausbildung", etc.

  // Relation zu Usern
  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VacationPeriod {
  id          String   @id @default(cuid())
  userId      String
  startDate   DateTime
  endDate     DateTime
  description String? // Optional: "Sommerferien", "Weihnachtsferien", etc.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, startDate, endDate])
}
